<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:int="http://www.springframework.org/schema/integration"
       xmlns:int-file="http://www.springframework.org/schema/integration/file"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/integration
           http://www.springframework.org/schema/integration/spring-integration-5.2.xsd
           http://www.springframework.org/schema/integration/file
           http://www.springframework.org/schema/integration/file/spring-integration-file-5.2.xsd">

    <int:channel id="dataInChannel"/>

    <int-file:inbound-channel-adapter
            channel="dataInChannel"
            directory="dataIn"
            filename-pattern="*.json"
    >
        <int:poller id="poller" fixed-delay="1000" />
    </int-file:inbound-channel-adapter>

    <int:channel id="dataInObject"/>

    <int:json-to-object-transformer input-channel="dataInChannel"
                                    output-channel="dataInObject"
                                    type="fr.efrei.notcensuredchat.Message"/>



    <int:recipient-list-router input-channel="dataInObject">
        <int:recipient channel="uncensoredLogger"/>
        <int:recipient channel="censureChannel"/>
        <int:recipient channel="logger"/>
        <int:recipient channel="aggregatorCensoredContent"/>
    </int:recipient-list-router>


    <int:channel id="uncensoredLogMessage"/>
    <int:channel id="uncensoredLoggerOutChannel"/>
    <int:service-activator input-channel="uncensoredLogger" output-channel="uncensoredLogMessage" ref="uncensoredLogServiceID" method="convertToLog"/>
    <bean id="uncensoredLogServiceID" class="fr.efrei.notcensuredchat.LogService"/>

    <int:recipient-list-router input-channel="uncensoredLogMessage">
        <int:recipient channel="globalUncensoredLog"/>
        <int:recipient channel="personalUncensoredLog"/>
    </int:recipient-list-router>

    <int:object-to-string-transformer input-channel="globalUncensoredLog" output-channel="uncensoredLoggerOutChannel"/>
    <int-file:outbound-channel-adapter id="globalUncensoredFileLogsOut"
                                       mode="APPEND"
                                       channel="uncensoredLoggerOutChannel"
                                       directory="logs"
                                       append-new-line="true"
                                       filename-generator-expression="'global_logs.txt'"/>



    <int:channel id="personalUncensoredLogWithHeader"/>
    <int:channel id="personalUncensoredLoggerOutChannel"/>

    <int:header-enricher input-channel="personalUncensoredLog" output-channel="personalUncensoredLogWithHeader">
        <int:header name="author" expression="payload.author"/>
    </int:header-enricher>

    <int:object-to-string-transformer input-channel="personalUncensoredLogWithHeader" output-channel="personalUncensoredLoggerOutChannel"/>
    <int-file:outbound-channel-adapter id="personalFileUncensoredLogsOut"
                                       mode="APPEND"
                                       channel="personalUncensoredLoggerOutChannel"
                                       directory="logs"
                                       append-new-line="true"
                                       filename-generator-expression="headers.author+'.txt'"/>




    <bean id="censureService" class="fr.efrei.notcensuredchat.CensureService"/>

    <int:channel id="dataOutObject"/>

    <int:service-activator input-channel="censureChannel"
                           output-channel="dataOutObject"
                           ref="censureService"
                           method="censureMessage"/>

    <!--    <int:logging-channel-adapter channel="dataOutObject" level="INFO"/>-->

    <int:channel id="dataOutChannel"/>

    <int:object-to-json-transformer input-channel="dataOutObject" output-channel="dataOutChannel"/>

    <int-file:outbound-channel-adapter id="filesOut"
                                       channel="dataOutChannel"
                                       directory="dataOut"
                                       delete-source-files="true"/>


    <int:channel id="logMessage"/>
    <int:channel id="loggerOutChannel"/>
    <int:service-activator input-channel="logger" output-channel="logMessage" ref="logServiceID" method="convertToLog"/>
    <bean id="logServiceID" class="fr.efrei.notcensuredchat.LogService"/>

    <int:recipient-list-router input-channel="logMessage">
        <int:recipient channel="globalLog"/>
        <int:recipient channel="personalLog"/>
    </int:recipient-list-router>

    <int:object-to-string-transformer input-channel="globalLog" output-channel="loggerOutChannel"/>
    <int-file:outbound-channel-adapter id="globalFileLogsOut"
                                       mode="APPEND"
                                       channel="loggerOutChannel"
                                       directory="logs_censored"
                                       append-new-line="true"
                                       filename-generator-expression="'global_logs.txt'"/>



    <int:channel id="personalLogWithHeader"/>
    <int:channel id="personalLoggerOutChannel"/>

    <int:header-enricher input-channel="personalLog" output-channel="personalLogWithHeader">
        <int:header name="author" expression="payload.author"/>
    </int:header-enricher>

    <int:object-to-string-transformer input-channel="personalLogWithHeader" output-channel="personalLoggerOutChannel"/>
    <int-file:outbound-channel-adapter id="personalFileLogsOut"
                                       mode="APPEND"
                                       channel="personalLoggerOutChannel"
                                       directory="logs_censored"
                                       append-new-line="true"
                                       filename-generator-expression="headers.author+'.txt'"/>


    <int:channel id="aggregatorCensoredContent"/>

    <int:channel id="messageWithBadWord"/>

    <int:header-enricher input-channel="aggregatorCensoredContent" output-channel="aggregatorCensoredContentOut">
        <int:header name="containBadWord" expression="payload.containBadWord"/>
    </int:header-enricher>

    <int:filter input-channel="aggregatorCensoredContentOut"
                expression="payload.containBadWord == true"
                output-channel="messageFiltered"/>


    <int:service-activator input-channel="messageFiltered" output-channel="messageWithBadWord" ref="badWordsServiceID" method="toCensoredContent"/>
    <bean id="badWordsServiceID" class="fr.efrei.notcensuredchat.CensoredContentService"/>

    <int:channel id="messageWithBadWordOut"/>
    <int:object-to-string-transformer input-channel="messageWithBadWord" output-channel="messageWithBadWordOut"/>
    <int-file:outbound-channel-adapter id="BadGuysListOut"
                                       mode="APPEND"
                                       channel="messageWithBadWordOut"
                                       directory="BadUser"
                                       append-new-line="true"
                                       filename-generator-expression="'BadUsers.txt'"/>
</beans>